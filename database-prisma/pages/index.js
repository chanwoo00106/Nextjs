import Head from "next/head";

import { PrismaClient } from "@prisma/client";
import { useState } from "react";

const prisma = new PrismaClient();

export async function getServerSideProps() {
  const initialContacts = await prisma.contact.findMany();
  return {
    props: {
      initialContacts,
    },
  };
}

async function saveContact(contact) {
  const res = await fetch("/api/hello", {
    method: "POST",
    body: JSON.stringify(contact),
  });
  if (!res.ok) {
    throw new Error(res.statusText);
  }

  return await res.json();
}

export default function Home({ initialContacts }) {
  const [input, setInput] = useState({
    firstName: "",
    lastName: "",
    email: "",
    avatar: "",
  });
  const [contacts, setContacts] = useState(initialContacts);

  const onChange = (e) => {
    setInput({
      ...input,
      [e.target.name]: e.target.value,
    });
  };
  const onSubmit = (e) => {
    e.preventDefault();
    saveContact(input);
    setContacts([...contacts, input]);
    setInput({ firstName: "", lastName: "", email: "", avatar: "" });
  };
  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <table>
        <thead>
          <tr>
            <th>id</th>
            <th>firstName</th>
            <th>lastName</th>
            <th>email</th>
            <th>avatar</th>
          </tr>
        </thead>
        <tbody>
          {contacts.map((contact) => (
            <tr key={contact.id}>
              <td>{contact.id}</td>
              <td>{contact.firstName}</td>
              <td>{contact.lastName}</td>
              <td>{contact.email}</td>
              <td>
                <img width={50} height={50} src={contact.avatar} alt="avatar" />
              </td>
            </tr>
          ))}
        </tbody>
      </table>

      <hr />

      <form onSubmit={onSubmit}>
        <input
          type="text"
          onChange={onChange}
          value={input.firstName}
          placeholder="firstName"
          name="firstName"
        />
        <input
          type="text"
          onChange={onChange}
          value={input.lastName}
          placeholder="lastName"
          name="lastName"
        />
        <input
          type="text"
          onChange={onChange}
          value={input.email}
          placeholder="email"
          name="email"
        />
        <input
          type="text"
          onChange={onChange}
          value={input.avatar}
          placeholder="avatar"
          name="avatar"
        />
        <button type="submit">제출</button>
      </form>
    </div>
  );
}
